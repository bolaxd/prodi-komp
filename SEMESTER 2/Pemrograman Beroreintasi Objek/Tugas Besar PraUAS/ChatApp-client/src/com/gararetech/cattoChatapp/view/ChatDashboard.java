/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gararetech.cattoChatapp.view;

import com.gararetech.cattoChatapp.controller.MessageSocket;
import com.gararetech.cattoChatapp.controller.WebsocketClientEndpoint;
import com.gararetech.cattoChatapp.event.MessageListener;
import com.gararetech.cattoChatapp.model.MessageSocketModel;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextPane;
import javax.swing.border.AbstractBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import javax.swing.text.Caret;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author user
 */
public class ChatDashboard extends javax.swing.JFrame implements MessageListener {

    /**
     * Creates new form ChatDashboard
     */
    MessageSocket messageSocket;
    MessageSocketModel messageSocketModel;

    public ChatDashboard() {
        messageSocketModel = new MessageSocketModel();
        messageSocket = new MessageSocket();

        initComponents();

        this.getTxtMessageArea().setLineWrap(true);
        this.getTxtMessageArea().setWrapStyleWord(true);

        messageSocketModel.setHost("localhost");
        messageSocketModel.setPort(5000);
        messageSocket.setModel(messageSocketModel);
        messageSocket.connectToServer();

        messageSocket.getClientEndPoint().addMessageHandler(new WebsocketClientEndpoint.MessageHandler() {
            public void handleMessage(String message) {
                System.out.println("Msg :" + message);
//                TESTING UI
                JLabel label1 = new JLabel(message);

                int messageWidth = (int) label1.getPreferredSize().width;
                int messageHeight = (int) label1.getPreferredSize().height;

                label1.setMaximumSize(new Dimension(chatArea.getWidth() + 10, 500));

                JLabel profilePicture = new JLabel("");
                ImageIcon iconLogo = new ImageIcon(getClass().getResource("images/profile-25.png"));
                profilePicture.setIcon(iconLogo);

                LineBorder roundedBorder = new LineBorder(Color.green, 3, true);

                JTextPane bubbleMessage = new JTextPane();
                bubbleMessage.setContentType("text/html"); // let the text pane know this is what you want
                bubbleMessage.setEditable(false); // as before
                bubbleMessage.setBackground(null); // this is the same as a JLabel
                bubbleMessage.setBorder(roundedBorder); // remove the border

                bubbleMessage.setText(message); // PESAN KE CHAT BUBBLE -bubbleText

                JPanel chatBub = new JPanel();
                chatBub.setLayout(new BorderLayout());
                chatBub.setOpaque(true);

                JPanel chatRightPanel = new JPanel();
                chatRightPanel.setLayout(new BorderLayout());
                chatRightPanel.setMaximumSize(new Dimension(55, 55));
                chatRightPanel.add(profilePicture, BorderLayout.NORTH);

                chatBub.setMaximumSize(new Dimension(messageWidth + 30, messageHeight + 20));
                chatBub.setAlignmentX(Component.RIGHT_ALIGNMENT);

                chatBub.add(bubbleMessage, BorderLayout.CENTER);
                chatBub.add(chatRightPanel, BorderLayout.EAST);

                chatArea.add(chatBub);
                chatArea.add(Box.createRigidArea(new Dimension(0, 10)));
                chatArea.revalidate();
                JScrollBar vertical = getChatInnerArea().getVerticalScrollBar();
                vertical.setValue( vertical.getMaximum() );
            }
        });
    }

    public JTextArea getTxtMessageArea() {
        return txtMessageArea;
    }

    public JScrollPane getChatInnerArea() {
        return chatInnerArea;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        btnSendText = new javax.swing.JButton();
        chatInnerArea = new javax.swing.JScrollPane();
        chatArea = new javax.swing.JPanel();
        testPanel = new javax.swing.JPanel();
        btnTest = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMessageArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setPreferredSize(new java.awt.Dimension(1280, 720));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSendText.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSendText.setText("Send");
        btnSendText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendTextActionPerformed(evt);
            }
        });
        mainPanel.add(btnSendText, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 540, 90, 40));

        chatInnerArea.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        chatInnerArea.setAutoscrolls(true);

        chatArea.setBackground(new java.awt.Color(204, 204, 204));
        chatArea.setAlignmentX(1.0F);
        chatArea.setAutoscrolls(true);
        chatArea.setLayout(new javax.swing.BoxLayout(chatArea, javax.swing.BoxLayout.Y_AXIS));
        chatInnerArea.setViewportView(chatArea);

        mainPanel.add(chatInnerArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 810, 480));

        testPanel.setLayout(new java.awt.BorderLayout());
        mainPanel.add(testPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 80, 180, 110));

        btnTest.setText("Edit profile");
        btnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestActionPerformed(evt);
            }
        });
        mainPanel.add(btnTest, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 210, 180, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/gararetech/cattoChatapp/view/images/gararetech.jpeg"))); // NOI18N
        jLabel1.setText("chatWallpaper");
        mainPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, 0, 0));

        jButton1.setText("...");
        mainPanel.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 540, 40, 40));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setHorizontalScrollBar(null);

        txtMessageArea.setColumns(20);
        txtMessageArea.setRows(5);
        txtMessageArea.setMaximumSize(new java.awt.Dimension(230, 600));
        jScrollPane1.setViewportView(txtMessageArea);

        mainPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 540, 660, 40));

        getContentPane().add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 860));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendTextActionPerformed
// TODO add your handling code here:
//        AbstractBorder messageBubbleBorder = new BubbleChatBorder(Color.GREEN, 2, 18, 0);
        String bubbleText = "<html>";
        String message = txtMessageArea.getText();
        int wrapCount = 0;
        int maxLength = 72;
        int firstSubstring = 0;
        int messageLength = txtMessageArea.getText().length();
        for (int i = 0; i < messageLength; i++) {
            if (i % maxLength == 0) {
                System.out.println(wrapCount);
                if (wrapCount > 0) {
                    System.out.println("");
                    firstSubstring = +maxLength;
                    int endSubstring = firstSubstring + maxLength;
                    bubbleText += "<br>" + message.substring(firstSubstring, endSubstring < messageLength ? endSubstring : messageLength);
                } else {
                    bubbleText += message.substring(firstSubstring, messageLength < maxLength ? messageLength : maxLength);
                }
            }
            wrapCount++;

        }
        bubbleText += "</html>";
        System.out.println(bubbleText);

        JLabel label1 = new JLabel(bubbleText);

        int messageWidth = (int) label1.getPreferredSize().width;
        int messageHeight = (int) label1.getPreferredSize().height;

        label1.setMaximumSize(new Dimension(chatArea.getWidth() + 10, 500));

        JLabel profilePicture = new JLabel("");
        ImageIcon iconLogo = new ImageIcon(getClass().getResource("images/profile-25.png"));
        profilePicture.setIcon(iconLogo);

        LineBorder roundedBorder = new LineBorder(Color.green, 3, true);

        JTextPane bubbleMessage = new JTextPane();
        bubbleMessage.setContentType("text/html"); // let the text pane know this is what you want
        bubbleMessage.setEditable(false); // as before
        bubbleMessage.setBackground(null); // this is the same as a JLabel
        bubbleMessage.setBorder(roundedBorder); // remove the border

        bubbleMessage.setText(txtMessageArea.getText()); // PESAN KE CHAT BUBBLE -bubbleText

        JPanel chatBub = new JPanel();
        chatBub.setLayout(new BorderLayout());
        chatBub.setOpaque(true);

        JPanel chatRightPanel = new JPanel();
        chatRightPanel.setLayout(new BorderLayout());
        chatRightPanel.setMaximumSize(new Dimension(55, 55));
        chatRightPanel.add(profilePicture, BorderLayout.NORTH);

        chatBub.setMaximumSize(new Dimension(messageWidth + 30, messageHeight + 20));
        chatBub.setAlignmentX(Component.RIGHT_ALIGNMENT);

        chatBub.add(bubbleMessage, BorderLayout.CENTER);
        chatBub.add(chatRightPanel, BorderLayout.EAST);

        chatArea.add(chatBub);
        chatArea.add(Box.createRigidArea(new Dimension(0, 10)));
        txtMessageArea.setText("");
        chatArea.revalidate();
        pack();
    }//GEN-LAST:event_btnSendTextActionPerformed

    private void btnTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestActionPerformed
        // TODO add your handling code here:
        JLabel left = new JLabel("LEFT OK");

        testPanel.add(left);
//        JLabel right = new JLabel("RIGHT");
//        JPanel top = new JPanel(new BorderLayout());
//
//        top.add(left, BorderLayout.WEST);
//        top.add(right, BorderLayout.EAST);
//        panel.add(top, BorderLayout.NORTH);
    }//GEN-LAST:event_btnTestActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSendText;
    private javax.swing.JButton btnTest;
    private javax.swing.JPanel chatArea;
    private javax.swing.JScrollPane chatInnerArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel testPanel;
    private javax.swing.JTextArea txtMessageArea;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onMessage(String message) {
        System.out.println("Pesan:" + message);
    }
}
